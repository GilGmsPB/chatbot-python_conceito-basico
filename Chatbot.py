# Chat Bot em Python
# Bibliotecas 
import unicodedata
import nltk

# Baixando os pacotes do NLTK necess√°rios
nltk.download('punkt')
nltk.download('stopwords')
nltk.download('omw-1.4')

from nltk.tokenize import word_tokenize
from nltk.corpus import stopwords

#  Dicion√°rio de respostas do chatbot com mais intera√ß√µes √∫teis
respostas = {
    
    "feliz": "Que bom saber disso! üòä Como posso ajudar hoje?",
    "triste": "Poxa, espero que seu dia melhore! Se quiser conversar, estou aqui. üò¢",
    "python": "Python √© uma √≥tima linguagem de programa√ß√£o! Precisa de ajuda com sintaxe, bibliotecas ou l√≥gica?",
    "ajuda": "Claro! Posso te ajudar com Python, l√≥gica de programa√ß√£o ou at√© dar recomenda√ß√µes de estudo. Pergunte √† vontade!",
    "tchau": "At√© mais! Se precisar de algo, estarei por aqui. üëã",
    "erro": "Erros s√£o normais na programa√ß√£o! Qual erro voc√™ encontrou? Talvez eu possa te ajudar a resolv√™-lo. üßê",
    "curso": "Se quer aprender programa√ß√£o, recomendo Coursera, Udemy, Alura ou YouTube. Qual linguagem voc√™ quer aprender?",
    "biblioteca": "Python tem v√°rias bibliotecas incr√≠veis! Quer saber sobre qual? Algumas populares s√£o Pandas, NumPy e Requests.",
    "carreira": "Se quer entrar no mercado de TI, uma dica √© aprender l√≥gica de programa√ß√£o e versionamento com Git. Posso sugerir cursos!",
    "html": "HTML √© a base da web! Se quiser aprender mais, recomendo MDN Web Docs e cursos gratuitos na W3Schools.",
    "css": "CSS deixa os sites bonitos! Quer aprender mais sobre estilos, flexbox ou anima√ß√µes?",
    "javascript": "JavaScript √© essencial para desenvolvimento web! Voc√™ quer saber sobre manipula√ß√£o de DOM, APIs ou frameworks?",
    "inteligencia artificial": "IA est√° crescendo muito! Algumas bibliotecas famosas para IA em Python s√£o TensorFlow e Scikit-learn.",
    "dados": "Se quer aprender sobre ci√™ncia de dados, sugiro estudar Pandas e Matplotlib para an√°lise e visualiza√ß√£o!",
    "github": "GitHub √© essencial para programadores! Voc√™ j√° sabe como criar um reposit√≥rio e fazer commits?",
    "seguranca": "Seguran√ßa √© fundamental! Voc√™ quer saber sobre criptografia, ataques comuns ou como proteger seu c√≥digo?",
    "banco de dados": "Bancos de dados armazenam informa√ß√µes. Voc√™ quer aprender SQL ou NoSQL?",
    "algoritmos": "Algoritmos resolvem problemas! Quer aprender busca bin√°ria, ordena√ß√£o ou estruturas de dados?",
    "estrutura de dados": "Filas, pilhas, listas e √°rvores s√£o essenciais! Sobre qual estrutura voc√™ quer saber mais?",
    "logica de programacao": "L√≥gica de programa√ß√£o √© a base para qualquer desenvolvedor. Quer dicas sobre condicionais, loops ou fun√ß√µes?"

} #final do dicion√°rio Respostas

#  Fun√ß√£o para remover acentos
def remover_acentos(texto):
    return ''.join(c for c in unicodedata.normalize('NFD', texto) if unicodedata.category(c) != 'Mn') 

#  Processamento de texto: remove acentos e stopwords
def processar_texto(texto):
    texto = remover_acentos(texto.lower())  # Normalizar acentos e colocar tudo em min√∫sculas
    palavras = word_tokenize(texto)  # Tokenizar texto
    stop_words = set(stopwords.words('portuguese'))  # Stopwords em portugu√™s
    palavras_filtradas = [p for p in palavras if p.isalnum() and p not in stop_words]  # Remover stopwords e caracteres especiais

    return palavras_filtradas  # Agora retornamos apenas palavras-chave filtradas

#  Fun√ß√£o para responder com base no input processado
def responder(usuario_input, primeira_interacao):
    palavras_chave = processar_texto(usuario_input)

    if primeira_interacao:
        return "Ol√°! Sou um chatbot. Como posso ajudar voc√™ hoje?"

    for palavra in palavras_chave:
        for chave in respostas:
            chave_sem_acento = remover_acentos(chave)  # Remover acentos das chaves do dicion√°rio
            if palavra in chave_sem_acento:  # Verifica se a palavra do usu√°rio est√° na chave do dicion√°rio
                return respostas[chave]
        
    return "Desculpe, n√£o entendi. Voc√™ pode reformular a pergunta? ü§î"

#  In√≠cio do chatbot
def iniciar_chat():
    print("ü§ñ Chatbot iniciado! Digite 'sair' para encerrar.")
    primeira_interacao = True

    while True:
        entrada = input("Voc√™: ")
        if entrada.lower() == "sair":
            print("Chatbot: At√© logo! üëã")
            break

        resposta = responder(entrada, primeira_interacao)
        primeira_interacao = False
        print(f"Chatbot: {resposta}")

# Iniciar o chat
iniciar_chat()
